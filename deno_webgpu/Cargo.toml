# Copyright 2018-2025 the Deno authors. MIT license.

[package]
name = "deno_webgpu"
version = "26.0.1"
authors = ["the Deno authors"]
edition = "2024"
rust-version = "1.85.0"
license = "MIT"
readme = "README.md"
repository = "https://github.com/gfx-rs/wgpu"
description = "WebGPU implementation for Deno"

[lib]
path = "lib.rs"

# We make all dependencies conditional on not being wasm,
# so the whole workspace can built as wasm.
[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
wgpu-core = { path = "../wgpu-core", features = [
    "raw-window-handle",
    "trace",
    "replay",
    "serde",
    "strict_asserts",
    "wgsl",
    "gles",
] }
wgpu-types = { path = "../wgpu-types", features = ["serde", "std"] }

deno_core = "0.362.0"
deno_error = "0.7.0"
serde = { version = "1.0.226", features = ["derive"] }
tokio = { version = "1.47.1", features = ["full"] }
raw-window-handle = "0.6.2"
thiserror = "2.0.16"
indexmap = "2.11.4"
serde_json = "1.0.145"
deno_unsync = "0.4.4"

# Apple Platforms
#
# We want the Metal backend.
[target.'cfg(target_vendor = "apple")'.dependencies]
wgpu-core = { path = "../wgpu-core", features = ["metal"] }

# Windows
#
# We want the DX12 backend.
[target.'cfg(windows)'.dependencies]
wgpu-core = { path = "../wgpu-core", features = ["dx12"] }

# Windows and Unix (not Emscripten)
#
# We want the Vulkan backend.
[target.'cfg(any(windows, all(unix, not(target_os = "emscripten"))))'.dependencies]
wgpu-core = { path = "../wgpu-core", features = ["vulkan"] }


