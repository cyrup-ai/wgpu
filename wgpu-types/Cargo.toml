[package]
name = "wgpu-types"
version = "26.0.1"
authors = [ "wgpu developers",]
edition = "2024"
description = "Common types and utilities for wgpu, the cross-platform, safe, pure-rust graphics API"
homepage = "https://wgpu.rs"
repository = "https://github.com/gfx-rs/wgpu"
keywords = [ "graphics", "gamedev", "gpu", "vulkan", "metal",]
license = "MIT OR Apache-2.0"
rust-version = "1.85.0"

[lib]

[features]
default = [ "std",]
std = [ "js-sys?/std", "web-sys?/std", "thiserror/std",]
strict_asserts = []
fragile-send-sync-non-atomic-wasm = []
serde = [ "dep:serde", "bitflags/serde",]
counters = []
trace = [ "std",]
web = [ "dep:js-sys", "dep:web-sys",]

[dependencies]
log = "0.4.28"

[dev-dependencies]
serde_json = "1.0.145"

[lints.clippy]
std_instead_of_core = "warn"
std_instead_of_alloc = "warn"
alloc_instead_of_core = "warn"

[dependencies.bitflags]
version = "2.9.4"
features = [ "serde",]

[dependencies.bytemuck]
version = "1.23.2"
features = [ "derive",]

[dependencies.thiserror]
version = "2.0.16"
optional = true

[dependencies.serde]
version = "1.0.226"
default-features = false
features = [ "alloc", "derive",]
optional = true



[dev-dependencies.serde]
version = "1.0.226"
features = [ "derive",]

[lints.rust.unexpected_cfgs]
level = "warn"
check-cfg = [ "cfg(web_sys_unstable_apis)",]

[package.metadata.docs.rs]
all-features = true
rustdoc-args = [ "--cfg", "docsrs",]
targets = [ "x86_64-unknown-linux-gnu", "x86_64-apple-darwin", "x86_64-pc-windows-msvc", "wasm32-unknown-unknown",]

[target."cfg(target_arch = \"wasm32\")".dependencies.js-sys]
version = "0.3.80"
optional = true
default-features = false

[target."cfg(target_arch = \"wasm32\")".dependencies.web-sys]
version = "0.3.80"
optional = true
default-features = false
features = [ "ImageBitmap", "ImageData", "HtmlImageElement", "HtmlVideoElement", "HtmlCanvasElement", "OffscreenCanvas", "VideoFrame",]
